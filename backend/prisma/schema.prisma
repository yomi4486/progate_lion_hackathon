// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id String @id
  display_name String @db.VarChar(32)
  icon_uri String
  description String @db.VarChar(256)

  following_id Follow[] @relation("following_relation")
  followee_id Follow[] @relation("followee_relation")

  created_rooms Room[]

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model Follow {
  following_id String
  followee_id String
  following_user User @relation(name: "following_relation", fields: [following_id], references: [id])
  followee_user User @relation(name: "followee_relation", fields: [followee_id], references: [id])
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  
  @@unique([following_id, followee_id])
}

model Room {
  room_id String @id
  room_owner_id String
  created_user User @relation(fields: [room_owner_id], references: [id])
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

/*
model Stream {
  rtmp_url String @unique
  rtmp_secret String
  hls_url String @unique
  user_id String
  stream_id String @id
  stream_title String @db.VarChar(64)
  stream_description String @db.VarChar(256)
  stream_tags String[]
  stream_thumbnail String
  stream_started_at DateTime @default(now())
  stream_ended_at DateTime?
  streaming_user User @relation(fields: [user_id], references: [id])
}
*/